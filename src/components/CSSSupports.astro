---
import Flex from "./utility/Flex.astro";
import { Code } from "astro:components";

type Props = {
  tests: string[];
};
const { tests } = Astro.props;
---

<div class="supports-container">
  <div class="supports">
    {
      tests.map((test) => (
        <div class="supports-test" data-test={test}>
          <Flex alignItems="center" gap="2xs">
            <Code
              code={`@supports (${test})`}
              lang="css"
              inline
              theme="css-variables"
            />
          </Flex>
        </div>
      ))
    }
  </div>
  <Flex class="supports-title">
    <small>
      your browser passed <span class="js-count">0</span>/{tests.length}
       tests.
    </small>
  </Flex>
</div>
<script>
  let count = 0;
  const elements = document.querySelectorAll(".supports-test");
  console.log(elements);
  elements.forEach((el) => {
    if (el instanceof HTMLElement) {
      const test = el.dataset.test!;
      const supported = CSS.supports(test);
      el.dataset.supported = String(supported);
      if (supported) count++;
    }
  });

  document.querySelector(".js-count").innerHTML = String(count);
</script>

<style>
  .supports-container {
    @media (--desktop) {
      grid-column: 1 / span 12;
    }
  }
  .supports {
    --_color: var(--tertiary-500);

    display: inline-flex;
    font-size: var(--step--3);
    align-items: flex-start;
    gap: var(--space-2xs);

    /* flex-direction: column; */
    flex-wrap: wrap;
  }
  :where(.supports) code {
    white-space: pre-line;
  }
  .supports-test {
    border-radius: var(--radius-3);
    border: 2px solid var(--primary-800);
    background-color: var(--primary-900);
    padding: 2px var(--space-3xs);
  }
  .supports-title {
    padding: var(--space-3xs);
    font-size: var(--step--2);
    font-family: var(--font-monospace);
    color: var(--gray-200);
  }
  .supports-indicator {
    height: 0.6rem;
    aspect-ratio: 1;
    border-radius: 50%;
    display: block;
    background-color: var(--_color);
  }
  [data-supported="false"] {
    text-decoration: line-through;
  }
</style>
