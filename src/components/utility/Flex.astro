---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  gap?: "l" | "xl" | "m" | "xs" | "2xs" | "3xs";
  justifyContent?: "between" | "center" | "around" | "start" | "end";
  alignItems?: "center" | "start" | "end";
}>;

const {
  as: Tag = "div",
  class: providedProps,
  gap,
  justifyContent = "start",
  alignItems = "start",
  ...props
} = Astro.props;
const componentClasses = `gap-${gap} justify-${justifyContent} align-${alignItems} flex`;
---

<Tag {...props} class:list={[componentClasses, providedProps]}>
  <slot />
</Tag>

<style>
  .flex {
    display: flex;
  }

  .gap-l {
    gap: var(--space-l);
  }
  .gap-xl {
    gap: var(--space-xl);
  }
  .gap-m {
    gap: var(--space-m);
  }
  .gap-s {
    gap: var(--space-s);
  }
  .gap-xs {
    gap: var(--space-xs);
  }
  .gap-2xs {
    gap: var(--space-2xs);
  }
  .gap-3xs {
    gap: var(--space-3xs);
  }

  .align-center {
    align-items: center;
  }

  .align-start {
    align-items: start;
  }

  .align-end {
    align-items: end;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-around {
    justify-content: space-around;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-start {
    justify-content: start;
  }

  .justify-end {
    justify-content: end;
  }
</style>
