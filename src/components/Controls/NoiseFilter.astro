---
import Controls from "./Controls.astro";
import InputRange from "./InputRange.astro";
/* import OnOff from "./OnOff.astro"; */
---

<Controls>
  <InputRange
    title="Frequency"
    name="frequency"
    min={0.05}
    max={0.2}
    value={0.05}
    step={0.01}
  />
  <!-- <InputRange
    title="Frequency"
    name="frequency"
    min={1}
    max={300}
    value={255}
    step={1}
  /> -->
  <!-- <OnOff title="Invert" name="invert" value="" /> -->
  <!-- <InputRange title="Opacity" name="opacity" min={0} max={360} value="90" /> -->
  <InputRange
    title="Light Surface"
    name="light-surface"
    min={1}
    max={40}
    value={1}
  />
  <InputRange
    title="Light Elevation"
    name="light-elevation"
    min={1}
    max={150}
    value={1}
  />
  <InputRange
    title="Light Specularity"
    name="light-specularity"
    min={0.1}
    max={3}
    value={0.1}
    step={0.1}
  />

  <svg
    xmlns="http://www.w3.org/2000/svg"
    version="1.1"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    slot="decoration"
    width="100px"
    height="100px"
  >
    <defs>
      <filter
        id="noise-filter"
        x="
        0%"
        y="0%"
        width="100%"
        height="100%"
        filterUnits="objectBoundingBox"
        primitiveUnits="userSpaceOnUse"
        color-interpolation-filters="linearRGB"
      >
        <feTurbulence
          type="fractalNoise"
          baseFrequency="0.101"
          numOctaves="4"
          seed="15"
          stitchTiles="stitch"
          result="turbulence"></feTurbulence>

        <!-- <feTurbulence
          type="turbulence"
          baseFrequency="0.169"
          numOctaves="4"
          seed="15"
          stitchTiles="stitch"
          result="turbulence"></feTurbulence> -->

        <feSpecularLighting
          surfaceScale="12"
          specularConstant="1.4"
          specularExponent="20"
          lighting-color="gray"
          in="turbulence"
          result="specularLighting"
        >
          <feDistantLight azimuth="3" elevation="138"></feDistantLight>
        </feSpecularLighting>
        <feBlend in="SourceGraphic" in2="specularLighting" mode="screen"
        ></feBlend>
        <!-- <feColorMatrix
          result="original"
          id="svgcolormatrix"
          type="matrix"
          values="1 0 0 0 0 0 1 0 0 0 0 0 1 -0.1 0.2 0 0 0 0.2 0"
        ></feColorMatrix> -->
        <!-- <feBlend in="SourceGraphic" in2="specularLighting" mode="screen"
        ></feBlend> -->
        <!-- <feBlend in="SourceGraphic" in2="specularLighting" mode="screen"
        ></feBlend> -->
      </filter>
      <!-- <filter
        id="noise-filter"
        x="0%"
        y="0%"
        width="100%"
        height="100%"
        filterUnits="objectBoundingBox"
        primitiveUnits="userSpaceOnUse"
        color-interpolation-filters="linearRGB"
      >
        <feTurbulence type="fractalNoise" baseFrequency="250" result="noisy"
        ></feTurbulence>
        <feColorMatrix type="saturate" values="0"></feColorMatrix>
        <feBlend in="SourceGraphic" in2="noisy" mode="multiply"></feBlend>
      </filter> -->
    </defs>
    <rect
      width="100"
      height="100"
      fill="var(--primary-400)"
      filter="url(#noise-filter)"></rect>
  </svg>
</Controls>

<script>
  const filter = document.querySelector("#noise-filter")!;
  const controls = [
    { name: "frequency", attribute: "baseFrequency" },
    { name: "light-surface", attribute: "surfaceScale" },
    { name: "light-elevation", attribute: "elevation" },
    { name: "light-specularity", attribute: "specularConstant" },
  ];

  controls.forEach((control) => {
    const element = document.querySelector(`[name=${control.name}]`);
    element?.addEventListener("input", (e) => {
      filter
        .querySelector(`fe${control.attribute}`)
        ?.setAttribute(control.attribute, (e.target as HTMLInputElement).value);
    });
  });
</script>
