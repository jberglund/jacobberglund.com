---
import type { CollectionEntry } from "astro:content";

import FormattedDate from "@components/formatters/FormattedDate.astro";
import Flex from "@components/utility/Flex.astro";
import SiteLayout from "./SiteLayout.astro";
import KeyTakeaways from "@components/KeyTakeaways.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, takeaways } =
  Astro.props;
---

<SiteLayout>
  <article class="u-grid">
    {
      heroImage && (
        <div class="hero-image">
          {heroImage && (
            <img
              transition:name="hero"
              width={1020}
              height={510}
              src={heroImage}
              alt=""
            />
          )}
        </div>
      )
    }

    <header class="blog-header">
      <h1 class="blog-heading">{title}</h1>
      <div class="meta">
        <Flex gap="m">
          <div class="date">
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
            <FormattedDate date={pubDate} />
          </div>
        </Flex>
      </div>
    </header>

    {takeaways && <KeyTakeaways items={takeaways} />}
    <div class="prose u-grid">
      <slot />
    </div>
  </article>
</SiteLayout>

<style>
  .prose {
    grid-column: 1 / -1;
  }

  .blog-header {
    padding-top: var(--space-2xl);
    padding-bottom: var(--space-l);
    grid-column: 2 / -1;
    display: grid;
    gap: var(--space-xs);
    @media (--desktop) {
      grid-column: 2 / span 11;
    }
  }

  .meta {
    font-size: var(--step--1);
  }
</style>
